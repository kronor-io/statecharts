/Users/axel-axul/Developer/statecharts/sdk/test/Plugin/Haskell/Chart2.hs:15:7-75: Splicing expression
    makeRelativeToProject "test/Plugin/SCXML/chart2.scxml"
      >>= liftString
  ======>
    "/Users/axel-axul/Developer/statecharts/sdk/test/Plugin/SCXML/chart2.scxml"
/Users/axel-axul/Developer/statecharts/sdk/test/Plugin/Haskell/Chart2.hs:(13,1)-(15,76): Splicing declarations
    genCodeFromFile
      "chart2"
      ("/Users/axel-axul/Developer/statecharts/sdk/test/Plugin/SCXML/chart2.scxml")
  ======>
    data Chart2States
      = Chart2StatesS1 |
        Chart2StatesS11 |
        Chart2StatesS12 |
        Chart2StatesS13 |
        Chart2StatesS2 |
        Chart2StatesS8 |
        Chart2StatesS3 |
        Chart2StatesS4 |
        Chart2StatesS5 |
        Chart2StatesS6 |
        Chart2StatesS7 |
        Chart2StatesS9 |
        Chart2StatesS10
      deriving (Show, Eq, Ord)
    instance AsText Chart2States where
      toText Chart2StatesS1 = "s1"
      toText Chart2StatesS11 = "s11"
      toText Chart2StatesS12 = "s12"
      toText Chart2StatesS13 = "s13"
      toText Chart2StatesS2 = "s2"
      toText Chart2StatesS8 = "s8"
      toText Chart2StatesS3 = "s3"
      toText Chart2StatesS4 = "s4"
      toText Chart2StatesS5 = "s5"
      toText Chart2StatesS6 = "s6"
      toText Chart2StatesS7 = "s7"
      toText Chart2StatesS9 = "s9"
      toText Chart2StatesS10 = "s10"
    data Chart2Events
      = Chart2EventsBarAbc3 |
        Chart2EventsBarAbc2 |
        Chart2EventsFooAbc1 |
        Chart2EventsFooAbc6 |
        Chart2EventsFooEv10 |
        Chart2EventsFooEv9 |
        Chart2EventsFooEv8 |
        Chart2EventsFooAbc7 |
        Chart2EventsFooAbc5 |
        Chart2EventsFooAbc4
      deriving (Show, Eq, Ord)
    instance AsText Chart2Events where
      toText Chart2EventsBarAbc3 = "bar.abc3"
      toText Chart2EventsBarAbc2 = "bar.abc2"
      toText Chart2EventsFooAbc1 = "foo.abc1"
      toText Chart2EventsFooAbc6 = "foo.abc6"
      toText Chart2EventsFooEv10 = "foo.ev10"
      toText Chart2EventsFooEv9 = "foo.ev9"
      toText Chart2EventsFooEv8 = "foo.ev8"
      toText Chart2EventsFooAbc7 = "foo.abc7"
      toText Chart2EventsFooAbc5 = "foo.abc5"
      toText Chart2EventsFooAbc4 = "foo.abc4"
    chart2
      = ((Chart "01") Chart2StatesS1)
          [stateS1, stateS11, stateS12, stateS13]
      where
          stateS1
            = ((((((MultiState Chart2StatesS1) Chart2StatesS2)
                    [stateS2, stateS8])
                   [((Transition Chart2EventsBarAbc3) Chart2StatesS1) Chart2StatesS11,
                    ((Transition Chart2EventsBarAbc2) Chart2StatesS1) Chart2StatesS12,
                    ((Transition Chart2EventsFooAbc1) Chart2StatesS1) Chart2StatesS13])
                  "s1n")
                 [])
                []
          stateS11 = (((Final Chart2StatesS11) "s11n") []) []
          stateS12 = (((Final Chart2StatesS12) "s12n") []) []
          stateS13
            = (((Final Chart2StatesS13) "s13n") [Script "table1.action11"]) []
          stateS2
            = ((((((MultiState Chart2StatesS2) Chart2StatesS3)
                    [stateS3, stateS4, stateS5, stateS6, stateS7])
                   [((Transition Chart2EventsFooAbc6) Chart2StatesS2) Chart2StatesS8])
                  "s2n")
                 [])
                []
          stateS8
            = ((((((MultiState Chart2StatesS8) Chart2StatesS9)
                    [stateS9, stateS10])
                   [])
                  "s8n")
                 [])
                []
          stateS3
            = ((((NormalState Chart2StatesS3)
                   [((Transition Chart2EventsFooEv10) Chart2StatesS3) Chart2StatesS4])
                  "s3n")
                 [Script "table1.action1"])
                []
          stateS4
            = ((((NormalState Chart2StatesS4)
                   [((Transition Chart2EventsFooEv9) Chart2StatesS4) Chart2StatesS5])
                  "s4n")
                 [Script "table1.action2"])
                []
          stateS5
            = ((((NormalState Chart2StatesS5)
                   [((Transition Chart2EventsFooEv8) Chart2StatesS5) Chart2StatesS6])
                  "s5n")
                 [Script "table1.action3"])
                []
          stateS6
            = ((((NormalState Chart2StatesS6)
                   [((Transition Chart2EventsFooAbc7) Chart2StatesS6) Chart2StatesS7])
                  "s6n")
                 [Script "table1.action4"])
                []
          stateS7
            = (((Final Chart2StatesS7) "s7n") [Script "table1.action5"]) []
          stateS9
            = ((((NormalState Chart2StatesS9)
                   [((Transition Chart2EventsFooAbc5) Chart2StatesS9) Chart2StatesS10,
                    ((Transition Chart2EventsFooAbc4) Chart2StatesS9) Chart2StatesS10])
                  "s9n")
                 [Script "table1.action7"])
                []
          stateS10
            = (((Final Chart2StatesS10) "s10n") [Script "table1.action6"]) []
