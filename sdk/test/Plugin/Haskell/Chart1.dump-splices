/Users/axel-axul/Developer/statecharts/sdk/test/Plugin/Haskell/Chart1.hs:15:7-75: Splicing expression
    makeRelativeToProject "test/Plugin/SCXML/chart1.scxml"
      >>= liftString
  ======>
    "/Users/axel-axul/Developer/statecharts/sdk/test/Plugin/SCXML/chart1.scxml"
/Users/axel-axul/Developer/statecharts/sdk/test/Plugin/Haskell/Chart1.hs:(13,1)-(15,76): Splicing declarations
    genCodeFromFile
      "chart1"
      ("/Users/axel-axul/Developer/statecharts/sdk/test/Plugin/SCXML/chart1.scxml")
  ======>
    data Chart1States
      = Chart1StatesS1 |
        Chart1StatesS5 |
        Chart1StatesS10 |
        Chart1StatesS16 |
        Chart1StatesS2 |
        Chart1StatesS3 |
        Chart1StatesS4 |
        Chart1StatesS6 |
        Chart1StatesS7 |
        Chart1StatesS8 |
        Chart1StatesS17 |
        Chart1StatesS9 |
        Chart1StatesS11 |
        Chart1StatesS12 |
        Chart1StatesS13 |
        Chart1StatesS14 |
        Chart1StatesS15
      deriving (Show, Eq, Ord)
    instance AsText Chart1States where
      toText Chart1StatesS1 = "s1"
      toText Chart1StatesS5 = "s5"
      toText Chart1StatesS10 = "s10"
      toText Chart1StatesS16 = "s16"
      toText Chart1StatesS2 = "s2"
      toText Chart1StatesS3 = "s3"
      toText Chart1StatesS4 = "s4"
      toText Chart1StatesS6 = "s6"
      toText Chart1StatesS7 = "s7"
      toText Chart1StatesS8 = "s8"
      toText Chart1StatesS17 = "s17"
      toText Chart1StatesS9 = "s9"
      toText Chart1StatesS11 = "s11"
      toText Chart1StatesS12 = "s12"
      toText Chart1StatesS13 = "s13"
      toText Chart1StatesS14 = "s14"
      toText Chart1StatesS15 = "s15"
    data Chart1Events
      = Chart1EventsEv1 |
        Chart1EventsEv2 |
        Chart1EventsEv3 |
        Chart1EventsEv4 |
        Chart1EventsEv5 |
        Chart1EventsEv6 |
        Chart1EventsEv7 |
        Chart1EventsEv8 |
        Chart1EventsEv9 |
        Chart1EventsEv10 |
        Chart1EventsEv11 |
        Chart1EventsEv12 |
        Chart1EventsEv13 |
        Chart1EventsEv14 |
        Chart1EventsEv15 |
        Chart1EventsEv16 |
        Chart1EventsEv17 |
        Chart1EventsEv18
      deriving (Show, Eq, Ord)
    instance AsText Chart1Events where
      toText Chart1EventsEv1 = "ev1"
      toText Chart1EventsEv2 = "ev2"
      toText Chart1EventsEv3 = "ev3"
      toText Chart1EventsEv4 = "ev4"
      toText Chart1EventsEv5 = "ev5"
      toText Chart1EventsEv6 = "ev6"
      toText Chart1EventsEv7 = "ev7"
      toText Chart1EventsEv8 = "ev8"
      toText Chart1EventsEv9 = "ev9"
      toText Chart1EventsEv10 = "ev10"
      toText Chart1EventsEv11 = "ev11"
      toText Chart1EventsEv12 = "ev12"
      toText Chart1EventsEv13 = "ev13"
      toText Chart1EventsEv14 = "ev14"
      toText Chart1EventsEv15 = "ev15"
      toText Chart1EventsEv16 = "ev16"
      toText Chart1EventsEv17 = "ev17"
      toText Chart1EventsEv18 = "ev18"
    chart1
      = ((Chart "01") Chart1StatesS1)
          [stateS1, stateS5, stateS10, stateS16]
      where
          stateS1
            = ((((((MultiState Chart1StatesS1) Chart1StatesS2)
                    [stateS2, stateS3, stateS4])
                   [((Transition Chart1EventsEv1) Chart1StatesS1) Chart1StatesS16,
                    ((Transition Chart1EventsEv2) Chart1StatesS1) Chart1StatesS5])
                  "s1n")
                 [])
                []
          stateS5
            = ((((((MultiState Chart1StatesS5) Chart1StatesS6)
                    [stateS6, stateS7, stateS8, stateS17, stateS9])
                   [((Transition Chart1EventsEv5) Chart1StatesS5) Chart1StatesS10])
                  "s5n")
                 [])
                []
          stateS10
            = ((((((MultiState Chart1StatesS10) Chart1StatesS11)
                    [stateS11, stateS12, stateS13, stateS14, stateS15])
                   [])
                  "s10n")
                 [])
                []
          stateS16 = (((Final Chart1StatesS16) "s16n") []) []
          stateS2
            = ((((NormalState Chart1StatesS2)
                   [((Transition Chart1EventsEv3) Chart1StatesS2) Chart1StatesS3])
                  "s2n")
                 [])
                []
          stateS3
            = ((((NormalState Chart1StatesS3)
                   [((Transition Chart1EventsEv4) Chart1StatesS3) Chart1StatesS4])
                  "s3n")
                 [])
                []
          stateS4
            = (((Final Chart1StatesS4) "s4n") [Script "table1.action"]) []
          stateS6
            = ((((NormalState Chart1StatesS6)
                   [((Transition Chart1EventsEv6) Chart1StatesS6) Chart1StatesS8,
                    ((Transition Chart1EventsEv7) Chart1StatesS6) Chart1StatesS9,
                    ((Transition Chart1EventsEv8) Chart1StatesS6) Chart1StatesS17])
                  "s6n")
                 [Script "table2.action"])
                []
          stateS7 = ((((NormalState Chart1StatesS7) []) "s7n") []) []
          stateS8
            = ((((NormalState Chart1StatesS8)
                   [((Transition Chart1EventsEv8) Chart1StatesS8) Chart1StatesS9,
                    ((Transition Chart1EventsEv9) Chart1StatesS8) Chart1StatesS7])
                  "s8n")
                 [])
                []
          stateS17 = (((Final Chart1StatesS17) "s17n") []) []
          stateS9 = (((Final Chart1StatesS9) "s9n") []) []
          stateS11
            = ((((NormalState Chart1StatesS11)
                   [((Transition Chart1EventsEv10) Chart1StatesS11) Chart1StatesS14,
                    ((Transition Chart1EventsEv11) Chart1StatesS11) Chart1StatesS12])
                  "s11n")
                 [])
                []
          stateS12
            = ((((NormalState Chart1StatesS12)
                   [((Transition Chart1EventsEv12) Chart1StatesS12) Chart1StatesS14,
                    ((Transition Chart1EventsEv13) Chart1StatesS12) Chart1StatesS15,
                    ((Transition Chart1EventsEv14) Chart1StatesS12) Chart1StatesS13])
                  "s12n")
                 [])
                []
          stateS13
            = ((((NormalState Chart1StatesS13)
                   [((Transition Chart1EventsEv15) Chart1StatesS13) Chart1StatesS14,
                    ((Transition Chart1EventsEv16) Chart1StatesS13) Chart1StatesS15,
                    ((Transition Chart1EventsEv17) Chart1StatesS13) Chart1StatesS14,
                    ((Transition Chart1EventsEv18) Chart1StatesS13) Chart1StatesS15])
                  "s13n")
                 [])
                []
          stateS14 = (((Final Chart1StatesS14) "s14n") []) []
          stateS15 = (((Final Chart1StatesS15) "s15n") []) []
