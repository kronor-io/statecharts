BEGIN;
  select plan(9);

  insert into fsm.statechart (id, name, version)
  values (9000000000,'test', 1::semver);

  prepare insert_state as
  insert into fsm.state (statechart_id, id, name, parent_id, is_initial, is_final)
  values (9000000000, $1, $1, $2, $3, false);

  set constraints all immediate;

  select lives_ok(
    $$execute insert_state('my_initial', null, true)$$,
    'inserting an initial state should work'
  );

  select throws_like(
    $$execute insert_state('another_initial', null, true)$$,
    'exactly one initial state is required per statechart',
    'initial states should be globally unique'
  );

  select lives_ok(
    $$execute insert_state('second', 'my_initial', true)$$,
    'inserting an initial state for a compound should work'
  );

  execute insert_state('third'   , 'second' , true);
  execute insert_state('fourth'  , 'second' , true);
  execute insert_state('another' , 'fourth' , false);

  select lives_ok(
    $$execute insert_state('fifth', null, false)$$,
    'check again that we are in a consistent state'
  );

  select throws_like(
    $$update fsm.state set is_initial = true where id = 'fifth' and statechart_id = 9000000000$$,
    'exactly one initial state is required per statechart',
    'updates are also verified'
  );

  select lives_ok(
    $$delete from fsm.state where id = 'fifth' and statechart_id = 9000000000$$ ,
    'deleting non-initial states is ok'
  );

  select throws_like(
    $$delete from fsm.state where id = 'my_initial' and statechart_id = 9000000000$$,
    'exactly one initial state is required per statechart',
    'deletes are also verified'
  );

  select throws_like(
    $$update fsm.state set parent_id = 'another' where id = 'my_initial' and statechart_id = 9000000000$$,
    'exactly one initial state is required per statechart',
    'check when the global initial is made a child state'
  );

  select lives_ok(
    $$
        with a as (delete from fsm.statechart where id = 9000000000)
        delete from fsm.state where statechart_id = 9000000000
    $$ ,
    'deleting everything is ok'
  );


  select finish();
ROLLBACK;
